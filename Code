#include <ESP8266WiFi.h>
#include <Firebase_ESP_Client.h>
#include "addons/TokenHelper.h"
#include "addons/RTDBHelper.h"
#include <Servo.h> // Include the Servo library

#define IR_PIN_1 D1  // GPIO pin connected to the first IR sensor
#define IR_PIN_2 D2  // GPIO pin connected to the second IR sensor
#define IR_PIN_3 D3  // GPIO pin connected to the third IR sensor

#define WIFI_SSID "123456789"
#define WIFI_PASSWORD "123456789"
#define API_KEY "AIzaSyC0gPSHesz3RxIsbFM48OkKK_zCBhfbtmc"
#define DATABASE_URL "https://test-26075-default-rtdb.firebaseio.com/"

FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;
unsigned long sendDataPrevMillis = 0;
bool signupOK = false;

Servo myservo; // Create a servo object

void setup() {
  
  pinMode(IR_PIN_1, INPUT);
  pinMode(IR_PIN_2, INPUT);
  pinMode(IR_PIN_3, INPUT);

  Serial.begin(115200);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();

  config.api_key = API_KEY;
  config.database_url = DATABASE_URL;

  if (Firebase.signUp(&config, &auth, "", "")) {
    Serial.println("Firebase sign-up successful");
    signupOK = true;
  } else {
    Serial.printf("%s\n", config.signer.signupError.message.c_str());
  }

  config.token_status_callback = tokenStatusCallback; // see addons/TokenHelper.h
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);

  myservo.attach(D5); // Attach the servo to a pin
}

void loop() {
  int sensor1 = digitalRead(IR_PIN_1);
  int sensor2 = digitalRead(IR_PIN_2);
  int sensor3 = digitalRead(IR_PIN_3);

  Serial.print(sensor1);
  Serial.print(sensor2);
  Serial.println(sensor3);

  if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 1000 || sendDataPrevMillis == 0)){
    sendDataPrevMillis = millis();

    if (Firebase.RTDB.setInt(&fbdo, "mainbucket/Irsensor1", sensor1)){
      Serial.println("PATH: " + fbdo.dataPath());
      Serial.println("TYPE: " + fbdo.dataType());
    }
    else {
      Serial.println("Failed REASON: " + fbdo.errorReason());
    }
    if (Firebase.RTDB.setInt(&fbdo, "mainbucket/Irsensor2", sensor2)){
      Serial.println("PATH: " + fbdo.dataPath());
      Serial.println("TYPE: " + fbdo.dataType());
      if (sensor2 == HIGH) {
        myservo.write(90); // Rotate the servo to 90 degrees
        delay(1000); // Adjust the delay as needed
      }
    }
    else {
      Serial.println("Failed REASON: " + fbdo.errorReason());
    }
    if (Firebase.RTDB.setInt(&fbdo, "mainbucket/Irsensor3", sensor3)){
      Serial.println("PATH: " + fbdo.dataPath());
      Serial.println("TYPE: " + fbdo.dataType());
    }
    else {
      Serial.println("Failed REASON: " + fbdo.errorReason());
    }

  delay(1000);  // Adjust the delay as needed
}
}
